# The cache key is built up of the following:
# We use a string that we can change to bust the cache
# The string "esy"
# The string for the OS
# The hash of the lock file
steps:
  - bash: |
      # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
      # The cache location is only needed for some issues that require to remove
      # individual packages from cache (e.g. ocamlfind below)
      DESIRED_LEN="86"
      # Note: This will need to change when upgrading esy version
      # that reenables long paths on windows.
      if [ "$AGENT_OS" == "Windows_NT" ]; then
        DESIRED_LEN="33"
      fi
      HOME_ESY3="$HOME/.esy/3"
      HOME_ESY3_LEN=${#HOME_ESY3}
      NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
      UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
      UNDERS="${UNDERS// /_}"
      THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i
      if [ "$AGENT_OS" == "Windows_NT" ]; then
        THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
      fi
      echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
      # This will be exposed as an env var ESY__CACHE_INSTALL_PATH, or an
      # Azure var esy__cache_install_path
      echo "##vso[task.setvariable variable=esy__cache_install_path]$THE_ESY__CACHE_INSTALL_PATH"
    displayName: '[Cache] calculate esy store path'
    
  - task: Cache@2
    inputs:
      # "v1" prefix added just to keep the ability to clear a cache without having to wait 7 days
      key: v1b | esy | $(Agent.OS) | esy.lock/index.json
      restoreKeys: v1b | esy | $(Agent.OS)
      path: _export
      cacheHitVar: CACHE_RESTORED
    displayName: '[Cache] esy packages'

  - powershell: esy.cmd import-dependencies
    continueOnError: true
    condition: and(eq(variables['AGENT.OS'], 'Windows_NT'), eq(variables.CACHE_RESTORED, 'true'))
    displayName: "esy import-dependencies if windows (build cache from CI cache)"

  - bash: esy import-dependencies
    continueOnError: true
    condition: and(ne(variables['AGENT.OS'], 'Windows_NT'), eq(variables.CACHE_RESTORED, 'true'))
    displayName: "esy import-dependencies if not windows (build cache from CI cache)"    

  # Remove as soon as https://github.com/esy/esy/pull/969 is resolved.
  # For now, windows won't use build cache for problematic package.
  - task: Bash@3
    continueOnError: true
    condition: and(eq(variables['AGENT.OS'], 'Windows_NT'), eq(variables.CACHE_RESTORED, 'true'))
    displayName: 'Remove ocamlfind prebuilts if on Windows'
    inputs:
      targetType: 'inline' # Optional. Options: filePath, inline
      script: |
        ls ${ESY__CACHE_INSTALL_PATH}
        rm -r ${ESY__CACHE_INSTALL_PATH}/opam__s__ocamlfind*

  - bash: 'rm -rf _import'
    continueOnError: true
    condition: eq(variables.CACHE_RESTORED, 'true')
    displayName: 'Remove import directory'
